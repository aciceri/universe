{
  config,
  inputs,
  lib,
  ...
}:
{
  config.flake.modules.nixos.base = nArgs: {
    imports = [ inputs.agenix.nixosModules.age ];

    # This option simply wraps `age.secrets` setting `file` to the value generated by flake's `secrets` module
    options.secrets = lib.mkOption {
      type = lib.types.attrsOf (
        lib.types.submodule (
          { name, ... }:
          {
            freeformType = lib.types.attrs;
            options = { };
            config = {
              file = config.secrets.${name}.file;
            };
          }
        )
      );
      default = { };
    };

    config.age.secrets = nArgs.config.secrets;
  };

  config.secrets =
    config.flake.nixosConfigurations
    |> lib.attrValues
    |> lib.map (
      nixos:
      nixos.config.age.secrets
      |> lib.mapAttrs (
        _: secret: {
          publicKeys = [ config.secrets."ssh_host_key_${nixos.config.networking.hostName}".sshPublicKey ];
        }
      )
    )
    |> lib.mkMerge;
}

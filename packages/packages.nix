{ getSystem, ... }:
{
  perSystem =
    {
      pkgs,
      inputs',
      lib,
      ...
    }:
    let

      personalPackagePaths =
        builtins.readDir ./.
        |> lib.filterAttrs (_: type: type == "directory")
        |> lib.mapAttrs (name: _: ./. + "/${name}" + "/_package.nix");

      nurPackagesSource = ''
        # Autogenerated
        { pkgs ? import <nixpkgs> { } }: {
      ''
      + (
        personalPackagePaths
        |> lib.concatMapAttrsStringSep "\n" (name: path: "  ${name} = pkgs.callPackage ./${name}/_package.nix { };")
      )
      + "\n}";
    in
    {
      packages = {
        inherit (inputs'.nix-ai-tools.packages) claude-desktop;
      }
      // (personalPackagePaths |> lib.mapAttrs (_: path: pkgs.callPackage path { }));

      files.files = [
        {
          path_ = "packages/_nur.nix";
          drv = nurPackagesSource |> pkgs.writeText "_nur.nix";
        }
      ];

      treefmt.settings.global.excludes = [ "packages/_nur.nix" ];
    };

  flake.modules.nixos.base =
    { config, ... }:
    {
      nixpkgs.overlays = [
        (_: _: (getSystem config.nixpkgs.hostPlatform.system).packages)
      ];
    };
}
